.link-hover {
	@include linkHover;
	&--light {
		color: $silver;
	}
	&--long {
		@include bpmin(landscape) {
			&::after {
				left: rem(-5);
				right: rem(-5);
			}
		}
	}
}

// form group
.fg {
	position: relative;
	margin-bottom: rem(20);
	padding-top: rem(18);

	input,
	textarea {
		padding: rem(10) rem(13);
		color: $black;
		line-height: rem(24);
		font-size: rem(15);
		width: 100%;
		outline: rem(1) solid $platinum;
		border: rem(2) solid transparent;
		background: $sand;
		outline-offset: 0;
		letter-spacing: rem(0.5);
		font-weight: 500;
		appearance: none;
		@include placeholder($silver);
		border-radius: 0;
		transition: border-color $speed, outline-color $speed;

		& + label {
			display: block;
			position: absolute;
			color: $black;
			top: 0;
			left: 0;
			line-height: 1;
			text-transform: uppercase;
			font-size: rem(10);
			font-weight: 500;
			letter-spacing: rem(1);
			opacity: 0;
			transform: translateY(rem(5));
			transition: opacity $speed, color $speed, transform $speed;
			&.required {
				&::before {
					content: '*';
					margin-right: rem(5);
				}
			}
		}

		&.input-error {
			& + label {
				color: $red;
				opacity: 1;
				transform: translateY(0);
			}
			border-color: $red !important;
			outline-color: $red !important;
		}

		&:focus {
			border-color: $black;
			outline-color: $black;
			@include placeholder(transparent);

			& + label {
				opacity: 1;
				transform: translateY(0);
			}
		}
	}

	textarea {
		resize: vertical;
		height: rem(200);
		min-height: rem(200);
		max-height: rem(400);
	}

	.char-count {
		font-size: rem(13);
		position: absolute;
		bottom: rem(-20);
		right: rem(5);
		color: $silver;
		display: block;
	}

	@include bpmin(landscape) {
		margin-bottom: rem(30);
		padding-top: rem(25);
		input,
		textarea {
			padding: rem(12) rem(15);
			line-height: rem(30);
			font-size: rem(18);
			& + label {
				font-size: rem(11);
			}
		}
	}
}

.hidden {
	display: none !important;
	@include noAction;
}

.transitionText {
	width: 100vw;
	position: fixed;
	top: 0;
	left: 0;
	z-index: 1000;
	display: flex;
	justify-content: center;
	align-items: center;
	@include noAction;
	transform: translateY(100%);
	opacity: 0;
	transform-origin: 50% 50%;

	& > span {
		color: $white;
		opacity: 0.2;
		font-weight: 700;
		font-size: rem(34);
		letter-spacing: rem(6);

		@include bpmin(small) {
			font-size: rem(38);
		}
		@include bpmin(medium) {
			font-size: rem(42);
		}
		@include bpmin(portrait) {
			font-size: rem(46);
		}
		@include bpmin(landscape) {
			font-size: rem(50);
		}

		.char {
			display: inline-block;
		}
	}
}

// Page load animations
.transitionBox {
	width: 100vw;
	min-height: -webkit-fill-available;
	position: fixed;
	z-index: 999;
	top: 0;
	left: 0;
	background: $black;
}

.loading {
	width: 100vw;
	height: 100vh;
	color: $black;
	position: fixed;
	top: 0;
	left: 0;
	z-index: 1000;
	line-height: 1.3;
	text-align: center;
	opacity: 0;
	.ja & {
		font-size: rem(26);
		@include bpmin(small) {
			font-size: rem(30);
		}
		@include bpmin(medium) {
			font-size: rem(34);
		}
		@include bpmin(portrait) {
			font-size: rem(38);
		}
		@include bpmin(landscape) {
			font-size: rem(42);
		}
	}
	.en & {
		font-weight: 700;
		font-size: rem(34);
		@include bpmin(small) {
			font-size: rem(38);
		}
		@include bpmin(medium) {
			font-size: rem(42);
		}
		@include bpmin(portrait) {
			font-size: rem(46);
		}
		@include bpmin(landscape) {
			font-size: rem(50);
		}
	}
	.loading-container {
		width: 100%;
	}
}
.loading-percentage {
	font-size: rem(30);
	@include bpmin(small) {
		font-size: rem(34);
	}
	@include bpmin(medium) {
		font-size: rem(38);
	}
	@include bpmin(portrait) {
		font-size: rem(42);
	}
	@include bpmin(landscape) {
		font-size: rem(46);
	}
}
.loading-hero-copy {
	margin-bottom: rem(40);
	position: relative;
	width: 100%;
	overflow: hidden;
	> span {
		display: inline-block;
	}
}
.loading-name {
	position: relative;
	color: transparent;
}
.loading-name-overlay {
	position: absolute;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
	background: $black;
}
.loading-title {
	position: absolute;
	left: 50%;
	top: 0;
	width: 100%;
	color: $white;
}

.jello {
	opacity: 0;
	@include noAction;
	// .jello-child {
	// 	opacity: 0;
	// 	transform-origin: 0% 0%;
	// 	transform: translateY(rem(20)) rotateX(-15deg) rotateY(7deg) rotateZ(1deg);
	// }
	&.in-view {
		pointer-events: auto;
		transition: opacity $speed * 2;
		opacity: 1 !important;
		// .jello-child {
		// 	transition: transform $speed*2, opacity $speed*2;
		// 	transform: none;
		// 	opacity: 1;
		// }
	}
}

.threed {
	// transform-style: preserve-3d;
	perspective: rem(1000);
}

.no-action {
	@include noAction;
	@include noSelect;
}

.no-transition {
	transition: none !important;
}

.pointer {
	cursor: pointer;
}
